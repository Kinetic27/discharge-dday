{"version":3,"sources":["components/feature/NowTime.js","components/feature/DischargeInfo.js","pages/Main.js","components/App.js","index.js"],"names":["padNumber","num","length","String","padStart","NowTime","now","useRef","Date","useState","current","getFullYear","year","setYear","getMonth","month","setMonth","getDate","day","setDay","getHours","hour","setHour","getMinutes","min","setMin","getSeconds","sec","setSec","interval","useEffect","setInterval","clearInterval","className","id","padTo2Digits","toString","TimeLeft","startTime","dischargeTime","totalTime","nowTime","diff","d","Math","floor","h","m","s","minutes","setMinutes","seconds","setSeconds","toFixed","percent","setPercent","value","max","Main","App","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b63d4bda.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../../styles/NowTime.scss';\n\nconst padNumber = (num, length) => {\n  // 자릿수 맞추기\n  return String(num).padStart(length, '0');\n};\n\nconst NowTime = () => {\n  const now = useRef(new Date());\n\n\n  const [year, setYear] = useState(now.current.getFullYear());\n  const [month, setMonth] = useState(padNumber(now.current.getMonth() + 1, 2));\n  const [day, setDay] = useState(padNumber(now.current.getDate(), 2));\n\n  const [hour, setHour] = useState(padNumber(now.current.getHours(), 2));\n  const [min, setMin] = useState(padNumber(now.current.getMinutes(), 2));\n  const [sec, setSec] = useState(padNumber(now.current.getSeconds(), 2));\n\n\n  // useRef -> 로컬 변수(렌더링과 관계 없이 변경 ㄱㄴ)\n  const interval = useRef(null);\n\n  // useEffect -> 최초 마운트 시에만 실행\n  useEffect(() => {\n    interval.current = setInterval(() => {\n      now.current = new Date();\n\n      setYear(now.current.getFullYear());\n      setMonth(padNumber(now.current.getMonth() + 1, 2));\n      setDay(padNumber(now.current.getDate(), 2));\n\n      setHour(padNumber(now.current.getHours(), 2));\n      setMin(padNumber(now.current.getMinutes(), 2));\n      setSec(padNumber(now.current.getSeconds(), 2));\n    }, 1000);\n\n    // clean-up function (컴포넌트 언마운트 시 실행됨)\n    return () => clearInterval(interval.current);\n  }, []);\n\n  return (\n    <div className='section' id='now-time'>\n      <h3 id='now-title'>{year}년 {month}월 {day}일</h3>\n      <h1 id='now-timer'>{hour} : {min} : {sec}</h1>\n    </div>\n  );\n};\n\nexport default NowTime;","import React, { useState, useRef, useEffect } from 'react';\nimport '../../styles/DischargeInfo.scss';\n\nconst padTo2Digits = (num, length) => {\n  return num.toString().padStart(length, '0');\n}\n\nconst TimeLeft = () => {\n  const startTime = useRef(new Date(\"2022-10-31\"));\n  const dischargeTime = useRef(new Date(\"2024-04-30\")); // 전역일 설정\n  const totalTime = useRef(dischargeTime.current - startTime.current);\n\n  const nowTime = useRef(new Date());\n  const diff = useRef(dischargeTime.current - nowTime.current);\n\n  const d = useRef(Math.floor(diff.current / (1000 * 60 * 60 * 24)));\n  const h = useRef(Math.floor((diff.current / (1000 * 60 * 60)) % 24));\n  const m = useRef(Math.floor((diff.current / (1000 * 60)) % 60));\n  const s = useRef(Math.floor(diff.current / 1000 % 60));\n\n  const [day, setDay] = useState(padTo2Digits(d.current, 2));\n  const [hour, setHour] = useState(padTo2Digits(h.current, 2));\n  const [minutes, setMinutes] = useState(padTo2Digits(m.current, 2));\n  const [seconds, setSeconds] = useState(padTo2Digits(s.current, 2));\n  const [percent, setPercent] = useState((100 - (diff.current / totalTime.current * 100)).toFixed(6));\n\n  const interval = useRef(null);\n\n  useEffect(() => {\n    interval.current = setInterval(() => {\n      nowTime.current = new Date();\n      diff.current = dischargeTime.current - nowTime.current;\n\n      d.current = Math.floor(diff.current / (1000 * 60 * 60 * 24));\n      h.current = Math.floor((diff.current / (1000 * 60 * 60)) % 24);\n      m.current = Math.floor((diff.current / (1000 * 60)) % 60);\n      s.current = Math.floor(diff.current / 1000 % 60);\n\n      setDay(padTo2Digits(d.current, 2));\n      setHour(padTo2Digits(h.current, 2));\n      setMinutes(padTo2Digits(m.current, 2));\n      setSeconds(padTo2Digits(s.current, 2));\n      setPercent((100 - (diff.current / totalTime.current * 100)).toFixed(7));\n    }, 50);\n\n    // clean-up function (컴포넌트 언마운트 시 실행됨)\n    return () => clearInterval(interval.current);\n  }, []);\n\n  return (\n    <div className='section' id='time-left'>\n      <h1 className='left-title'>전역까지</h1>\n      <div>\n        <span className='left-text' id='left-day'>{day}일,&nbsp;</span>\n        <span className='left-text' id='left-time'>{hour}시간 {minutes}분 {seconds}초</span>\n      </div>\n      <div className='progress-group'>\n        <progress className=\"left-progress\" value={percent} min=\"0\" max=\"100\" />\n        <span className='left-percent'>{percent}%</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeLeft;","import NowTime from '../components/feature/NowTime';\nimport TimeLeft from '../components/feature/DischargeInfo';\nimport '../styles/Main.scss';\n\nconst Main = () => {\n    return (\n        <div className='main-component'>\n            <div className='container'>\n                <NowTime />\n                <TimeLeft />\n            </div>\n        </div>\n    )\n}\n\nexport default Main;","import { Route, Routes } from 'react-router-dom';\nimport Main from '../pages/Main';\n\n\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Main />} />\n      <Route path=\"*\" element={<div>sorry error</div>} />\n    </Routes>\n  );\n};\n\n/*\nhttps://gongbbu.tistory.com/71\nhttps://velog.io/@chez_bono/%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%83%80%EC%9D%B4%EB%A8%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\n*/\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}